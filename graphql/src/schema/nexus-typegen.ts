/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core, connectionPluginCore } from "nexus"
import type { RelayGlobalIdNexusFieldConfig } from "@jcm/nexus-plugin-relay-global-id"
import type { QueryComplexity } from "nexus/dist/plugins/queryComplexityPlugin"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    datetime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName> & { totalCount?: connectionPluginCore.ConnectionFieldResolver<TypeName, FieldName, "totalCount"> }
    ): void
    relayGlobalId<FieldName extends string>(
            fieldName: FieldName, 
            config: RelayGlobalIdNexusFieldConfig<TypeName, FieldName>
          ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  Role: "ADMIN" | "MASTER" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: Date
}

export interface NexusGenObjects {
  ChatRoom: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    maxTokens: number; // Int!
    model: string; // String!
    name?: string | null; // String
    stream: boolean; // Boolean!
    temperature: number; // Int!
    title?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  ChatRoomEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
  }
  ChatRoomMessage: { // root type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    role: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  ChatRoomMessageEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['ChatRoomMessage'] | null; // ChatRoomMessage
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  QueryChatRoomConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['ChatRoomEdge'] | null> | null; // [ChatRoomEdge]
    nodes?: Array<NexusGenRootTypes['ChatRoom'] | null> | null; // [ChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryChatRoomMessageConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['ChatRoomMessageEdge'] | null> | null; // [ChatRoomMessageEdge]
    nodes?: Array<NexusGenRootTypes['ChatRoomMessage'] | null> | null; // [ChatRoomMessage]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryUserChatRoomConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['UserChatRoomEdge'] | null> | null; // [UserChatRoomEdge]
    nodes?: Array<NexusGenRootTypes['UserChatRoom'] | null> | null; // [UserChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryUserConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    nodes?: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryUserVertexChatRoomConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['UserVertexChatRoomEdge'] | null> | null; // [UserVertexChatRoomEdge]
    nodes?: Array<NexusGenRootTypes['UserVertexChatRoom'] | null> | null; // [UserVertexChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryVertexChatRoomConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['VertexChatRoomEdge'] | null> | null; // [VertexChatRoomEdge]
    nodes?: Array<NexusGenRootTypes['VertexChatRoom'] | null> | null; // [VertexChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryVertexChatRoomExampleConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['VertexChatRoomExampleEdge'] | null> | null; // [VertexChatRoomExampleEdge]
    nodes?: Array<NexusGenRootTypes['VertexChatRoomExample'] | null> | null; // [VertexChatRoomExample]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  QueryVertexChatRoomMessageConnection_Connection: { // root type
    edges?: Array<NexusGenRootTypes['VertexChatRoomMessageEdge'] | null> | null; // [VertexChatRoomMessageEdge]
    nodes?: Array<NexusGenRootTypes['VertexChatRoomMessage'] | null> | null; // [VertexChatRoomMessage]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    iconUrl?: string | null; // String
    iv?: string | null; // String
    role?: NexusGenEnums['Role'] | null; // Role
    uid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username?: string | null; // String
  }
  UserChatRoom: { // root type
    chatRoomId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
  }
  UserChatRoomEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
  }
  UserEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['User'] | null; // User
  }
  UserVertexChatRoom: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
    vertexChatRoomId: number; // Int!
  }
  UserVertexChatRoomEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
  }
  VertexChatRoom: { // root type
    context: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    isShered: boolean; // Boolean!
    maxTokens: number; // Int!
    model: string; // String!
    name?: string | null; // String
    temperature: number; // Float!
    title?: string | null; // String
    topK: number; // Int!
    topP: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VertexChatRoomEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
  }
  VertexChatRoomExample: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    input: string; // String!
    output: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VertexChatRoomExampleEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['VertexChatRoomExample'] | null; // VertexChatRoomExample
  }
  VertexChatRoomMessage: { // root type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    role: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    vertexChatRoomId: number; // Int!
  }
  VertexChatRoomMessageEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
  }
}

export interface NexusGenInterfaces {
  Node: any;
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  ChatRoom: { // field return type
    chatRoomMessages: NexusGenRootTypes['ChatRoomMessage'][]; // [ChatRoomMessage!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    maxTokens: number; // Int!
    model: string; // String!
    name: string | null; // String
    stream: boolean; // Boolean!
    temperature: number; // Int!
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userChatRooms: NexusGenRootTypes['UserChatRoom'][]; // [UserChatRoom!]!
  }
  ChatRoomEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
  }
  ChatRoomMessage: { // field return type
    chatRoomId: string | null; // ID
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    role: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: string | null; // ID
  }
  ChatRoomMessageEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['ChatRoomMessage'] | null; // ChatRoomMessage
  }
  Mutation: { // field return type
    createChatRoom: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
    createChatRoomMessage: NexusGenRootTypes['ChatRoomMessage'] | null; // ChatRoomMessage
    createUser: NexusGenRootTypes['User'] | null; // User
    createUserChatRoom: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
    createUserVertexChatRoom: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
    createVertexChatRoom: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
    createVertexChatRoomExample: NexusGenRootTypes['VertexChatRoomExample'] | null; // VertexChatRoomExample
    createVertexChatRoomMessage: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
    deleteChatRoom: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
    deleteChatRoomMessage: NexusGenRootTypes['ChatRoomMessage'] | null; // ChatRoomMessage
    deleteUser: NexusGenRootTypes['User'] | null; // User
    deleteUserChatRoom: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
    deleteUserVertexChatRoom: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
    deleteVertexChatRoom: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
    deleteVertexChatRoomExample: NexusGenRootTypes['VertexChatRoomExample'] | null; // VertexChatRoomExample
    deleteVertexChatRoomMessage: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
    updateChatRoom: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
    updateChatRoomMessage: NexusGenRootTypes['ChatRoomMessage'] | null; // ChatRoomMessage
    updateUser: NexusGenRootTypes['User'] | null; // User
    updateUserChatRoom: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
    updateUserVertexChatRoom: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
    updateVertexChatRoom: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
    updateVertexChatRoomExample: NexusGenRootTypes['VertexChatRoomExample'] | null; // VertexChatRoomExample
    updateVertexChatRoomMessage: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    chatRoomConnection: NexusGenRootTypes['QueryChatRoomConnection_Connection'] | null; // QueryChatRoomConnection_Connection
    chatRoomMessageConnection: NexusGenRootTypes['QueryChatRoomMessageConnection_Connection'] | null; // QueryChatRoomMessageConnection_Connection
    getChatRoom: NexusGenRootTypes['ChatRoom'] | null; // ChatRoom
    getChatRoomMessages: Array<NexusGenRootTypes['ChatRoomMessage'] | null> | null; // [ChatRoomMessage]
    getUser: NexusGenRootTypes['User'] | null; // User
    getUserChatRoom: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
    getUserVertexChatRoom: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
    getVertexChatRoom: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
    getVertexChatRoomExamples: Array<NexusGenRootTypes['VertexChatRoomExample'] | null> | null; // [VertexChatRoomExample]
    getVertexChatRoomMessage: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
    me: NexusGenRootTypes['User'] | null; // User
    node: NexusGenRootTypes['Node'] | null; // Node
    nodes: Array<NexusGenRootTypes['Node'] | null>; // [Node]!
    postTweet: boolean | null; // Boolean
    userChatRoomConnection: NexusGenRootTypes['QueryUserChatRoomConnection_Connection'] | null; // QueryUserChatRoomConnection_Connection
    userConnection: NexusGenRootTypes['QueryUserConnection_Connection'] | null; // QueryUserConnection_Connection
    userVertexChatRoomConnection: NexusGenRootTypes['QueryUserVertexChatRoomConnection_Connection'] | null; // QueryUserVertexChatRoomConnection_Connection
    vertexChatRoomConnection: NexusGenRootTypes['QueryVertexChatRoomConnection_Connection'] | null; // QueryVertexChatRoomConnection_Connection
    vertexChatRoomExampleConnection: NexusGenRootTypes['QueryVertexChatRoomExampleConnection_Connection'] | null; // QueryVertexChatRoomExampleConnection_Connection
    vertexChatRoomMessageConnection: NexusGenRootTypes['QueryVertexChatRoomMessageConnection_Connection'] | null; // QueryVertexChatRoomMessageConnection_Connection
  }
  QueryChatRoomConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['ChatRoomEdge'] | null> | null; // [ChatRoomEdge]
    nodes: Array<NexusGenRootTypes['ChatRoom'] | null> | null; // [ChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryChatRoomMessageConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['ChatRoomMessageEdge'] | null> | null; // [ChatRoomMessageEdge]
    nodes: Array<NexusGenRootTypes['ChatRoomMessage'] | null> | null; // [ChatRoomMessage]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryUserChatRoomConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['UserChatRoomEdge'] | null> | null; // [UserChatRoomEdge]
    nodes: Array<NexusGenRootTypes['UserChatRoom'] | null> | null; // [UserChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryUserConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    nodes: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryUserVertexChatRoomConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['UserVertexChatRoomEdge'] | null> | null; // [UserVertexChatRoomEdge]
    nodes: Array<NexusGenRootTypes['UserVertexChatRoom'] | null> | null; // [UserVertexChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryVertexChatRoomConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['VertexChatRoomEdge'] | null> | null; // [VertexChatRoomEdge]
    nodes: Array<NexusGenRootTypes['VertexChatRoom'] | null> | null; // [VertexChatRoom]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryVertexChatRoomExampleConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['VertexChatRoomExampleEdge'] | null> | null; // [VertexChatRoomExampleEdge]
    nodes: Array<NexusGenRootTypes['VertexChatRoomExample'] | null> | null; // [VertexChatRoomExample]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  QueryVertexChatRoomMessageConnection_Connection: { // field return type
    edges: Array<NexusGenRootTypes['VertexChatRoomMessageEdge'] | null> | null; // [VertexChatRoomMessageEdge]
    nodes: Array<NexusGenRootTypes['VertexChatRoomMessage'] | null> | null; // [VertexChatRoomMessage]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    iconUrl: string | null; // String
    id: string | null; // ID
    iv: string | null; // String
    role: NexusGenEnums['Role'] | null; // Role
    uid: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    username: string | null; // String
  }
  UserChatRoom: { // field return type
    chatRoomId: number; // Int!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
  }
  UserChatRoomEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['UserChatRoom'] | null; // UserChatRoom
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User'] | null; // User
  }
  UserVertexChatRoom: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: number; // Int!
    vertexChatRoomId: number; // Int!
  }
  UserVertexChatRoomEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['UserVertexChatRoom'] | null; // UserVertexChatRoom
  }
  VertexChatRoom: { // field return type
    UserVertexChatRoom: NexusGenRootTypes['UserVertexChatRoom'][]; // [UserVertexChatRoom!]!
    VertexChatRoomExample: NexusGenRootTypes['VertexChatRoomExample'][]; // [VertexChatRoomExample!]!
    VertexChatRoomMessage: NexusGenRootTypes['VertexChatRoomMessage'][]; // [VertexChatRoomMessage!]!
    context: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    isShered: boolean; // Boolean!
    maxTokens: number; // Int!
    model: string; // String!
    name: string | null; // String
    temperature: number; // Float!
    title: string | null; // String
    topK: number; // Int!
    topP: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VertexChatRoomEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['VertexChatRoom'] | null; // VertexChatRoom
  }
  VertexChatRoomExample: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    input: string; // String!
    output: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    vertexChatRoomId: string | null; // ID
  }
  VertexChatRoomExampleEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['VertexChatRoomExample'] | null; // VertexChatRoomExample
  }
  VertexChatRoomMessage: { // field return type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    role: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    vertexChatRoomId: number; // Int!
  }
  VertexChatRoomMessageEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['VertexChatRoomMessage'] | null; // VertexChatRoomMessage
  }
  Node: { // field return type
    id: string | null; // ID
  }
}

export interface NexusGenFieldTypeNames {
  ChatRoom: { // field return type name
    chatRoomMessages: 'ChatRoomMessage'
    createdAt: 'DateTime'
    id: 'ID'
    maxTokens: 'Int'
    model: 'String'
    name: 'String'
    stream: 'Boolean'
    temperature: 'Int'
    title: 'String'
    updatedAt: 'DateTime'
    userChatRooms: 'UserChatRoom'
  }
  ChatRoomEdge: { // field return type name
    cursor: 'String'
    node: 'ChatRoom'
  }
  ChatRoomMessage: { // field return type name
    chatRoomId: 'ID'
    content: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    role: 'String'
    updatedAt: 'DateTime'
    userId: 'ID'
  }
  ChatRoomMessageEdge: { // field return type name
    cursor: 'String'
    node: 'ChatRoomMessage'
  }
  Mutation: { // field return type name
    createChatRoom: 'ChatRoom'
    createChatRoomMessage: 'ChatRoomMessage'
    createUser: 'User'
    createUserChatRoom: 'UserChatRoom'
    createUserVertexChatRoom: 'UserVertexChatRoom'
    createVertexChatRoom: 'VertexChatRoom'
    createVertexChatRoomExample: 'VertexChatRoomExample'
    createVertexChatRoomMessage: 'VertexChatRoomMessage'
    deleteChatRoom: 'ChatRoom'
    deleteChatRoomMessage: 'ChatRoomMessage'
    deleteUser: 'User'
    deleteUserChatRoom: 'UserChatRoom'
    deleteUserVertexChatRoom: 'UserVertexChatRoom'
    deleteVertexChatRoom: 'VertexChatRoom'
    deleteVertexChatRoomExample: 'VertexChatRoomExample'
    deleteVertexChatRoomMessage: 'VertexChatRoomMessage'
    updateChatRoom: 'ChatRoom'
    updateChatRoomMessage: 'ChatRoomMessage'
    updateUser: 'User'
    updateUserChatRoom: 'UserChatRoom'
    updateUserVertexChatRoom: 'UserVertexChatRoom'
    updateVertexChatRoom: 'VertexChatRoom'
    updateVertexChatRoomExample: 'VertexChatRoomExample'
    updateVertexChatRoomMessage: 'VertexChatRoomMessage'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    chatRoomConnection: 'QueryChatRoomConnection_Connection'
    chatRoomMessageConnection: 'QueryChatRoomMessageConnection_Connection'
    getChatRoom: 'ChatRoom'
    getChatRoomMessages: 'ChatRoomMessage'
    getUser: 'User'
    getUserChatRoom: 'UserChatRoom'
    getUserVertexChatRoom: 'UserVertexChatRoom'
    getVertexChatRoom: 'VertexChatRoom'
    getVertexChatRoomExamples: 'VertexChatRoomExample'
    getVertexChatRoomMessage: 'VertexChatRoomMessage'
    me: 'User'
    node: 'Node'
    nodes: 'Node'
    postTweet: 'Boolean'
    userChatRoomConnection: 'QueryUserChatRoomConnection_Connection'
    userConnection: 'QueryUserConnection_Connection'
    userVertexChatRoomConnection: 'QueryUserVertexChatRoomConnection_Connection'
    vertexChatRoomConnection: 'QueryVertexChatRoomConnection_Connection'
    vertexChatRoomExampleConnection: 'QueryVertexChatRoomExampleConnection_Connection'
    vertexChatRoomMessageConnection: 'QueryVertexChatRoomMessageConnection_Connection'
  }
  QueryChatRoomConnection_Connection: { // field return type name
    edges: 'ChatRoomEdge'
    nodes: 'ChatRoom'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryChatRoomMessageConnection_Connection: { // field return type name
    edges: 'ChatRoomMessageEdge'
    nodes: 'ChatRoomMessage'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryUserChatRoomConnection_Connection: { // field return type name
    edges: 'UserChatRoomEdge'
    nodes: 'UserChatRoom'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryUserConnection_Connection: { // field return type name
    edges: 'UserEdge'
    nodes: 'User'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryUserVertexChatRoomConnection_Connection: { // field return type name
    edges: 'UserVertexChatRoomEdge'
    nodes: 'UserVertexChatRoom'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryVertexChatRoomConnection_Connection: { // field return type name
    edges: 'VertexChatRoomEdge'
    nodes: 'VertexChatRoom'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryVertexChatRoomExampleConnection_Connection: { // field return type name
    edges: 'VertexChatRoomExampleEdge'
    nodes: 'VertexChatRoomExample'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  QueryVertexChatRoomMessageConnection_Connection: { // field return type name
    edges: 'VertexChatRoomMessageEdge'
    nodes: 'VertexChatRoomMessage'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    iconUrl: 'String'
    id: 'ID'
    iv: 'String'
    role: 'Role'
    uid: 'String'
    updatedAt: 'DateTime'
    username: 'String'
  }
  UserChatRoom: { // field return type name
    chatRoomId: 'Int'
    createdAt: 'DateTime'
    id: 'ID'
    updatedAt: 'DateTime'
    userId: 'Int'
  }
  UserChatRoomEdge: { // field return type name
    cursor: 'String'
    node: 'UserChatRoom'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  UserVertexChatRoom: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    updatedAt: 'DateTime'
    userId: 'Int'
    vertexChatRoomId: 'Int'
  }
  UserVertexChatRoomEdge: { // field return type name
    cursor: 'String'
    node: 'UserVertexChatRoom'
  }
  VertexChatRoom: { // field return type name
    UserVertexChatRoom: 'UserVertexChatRoom'
    VertexChatRoomExample: 'VertexChatRoomExample'
    VertexChatRoomMessage: 'VertexChatRoomMessage'
    context: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    isShered: 'Boolean'
    maxTokens: 'Int'
    model: 'String'
    name: 'String'
    temperature: 'Float'
    title: 'String'
    topK: 'Int'
    topP: 'Float'
    updatedAt: 'DateTime'
  }
  VertexChatRoomEdge: { // field return type name
    cursor: 'String'
    node: 'VertexChatRoom'
  }
  VertexChatRoomExample: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    input: 'String'
    output: 'String'
    updatedAt: 'DateTime'
    vertexChatRoomId: 'ID'
  }
  VertexChatRoomExampleEdge: { // field return type name
    cursor: 'String'
    node: 'VertexChatRoomExample'
  }
  VertexChatRoomMessage: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    role: 'String'
    updatedAt: 'DateTime'
    vertexChatRoomId: 'Int'
  }
  VertexChatRoomMessageEdge: { // field return type name
    cursor: 'String'
    node: 'VertexChatRoomMessage'
  }
  Node: { // field return type name
    id: 'ID'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createChatRoom: { // args
      maxTokens?: number | null; // Int
      model?: string | null; // String
      name?: string | null; // String
      stream?: boolean | null; // Boolean
      systemContent?: string | null; // String
      temperature?: number | null; // Int
      title?: string | null; // String
    }
    createChatRoomMessage: { // args
      chatRoomId?: string | null; // String
      content?: string | null; // String
      role?: string | null; // String
    }
    createUser: { // args
      email?: string | null; // String
      iconUrl?: string | null; // String
      uid?: string | null; // String
      username?: string | null; // String
    }
    createUserChatRoom: { // args
      chatRoomId?: number | null; // Int
      userId?: number | null; // Int
    }
    createUserVertexChatRoom: { // args
      userId?: number | null; // Int
      vertexChatRoomId?: number | null; // Int
    }
    createVertexChatRoom: { // args
      context?: string | null; // String
      isShered?: boolean | null; // Boolean
      maxTokens?: number | null; // Int
      model?: string | null; // String
      name?: string | null; // String
      temperature?: number | null; // Float
      title?: string | null; // String
      topK?: number | null; // Int
      topP?: number | null; // Float
    }
    createVertexChatRoomExample: { // args
      input?: string | null; // String
      output?: string | null; // String
      vertexChatRoomId?: string | null; // String
    }
    createVertexChatRoomMessage: { // args
      content?: string | null; // String
      role?: string | null; // String
      vertexChatRoomId?: string | null; // String
    }
    deleteChatRoom: { // args
      id?: string | null; // String
    }
    deleteChatRoomMessage: { // args
      id?: string | null; // String
    }
    deleteUser: { // args
      id?: string | null; // String
    }
    deleteUserChatRoom: { // args
      id?: string | null; // String
    }
    deleteUserVertexChatRoom: { // args
      id?: string | null; // String
    }
    deleteVertexChatRoom: { // args
      id?: string | null; // String
    }
    deleteVertexChatRoomExample: { // args
      id?: string | null; // String
    }
    deleteVertexChatRoomMessage: { // args
      id?: string | null; // String
    }
    updateChatRoom: { // args
      id?: string | null; // String
      model?: string | null; // String
      name?: string | null; // String
      stream?: boolean | null; // Boolean
      title?: string | null; // String
    }
    updateChatRoomMessage: { // args
      chatRoomId?: number | null; // Int
      content?: string | null; // String
      id?: string | null; // String
      userId?: number | null; // Int
    }
    updateUser: { // args
      email?: string | null; // String
      iconUrl?: string | null; // String
      id?: string | null; // String
      uid?: string | null; // String
      username?: string | null; // String
    }
    updateUserChatRoom: { // args
      chatRoomId?: number | null; // Int
      id?: string | null; // String
    }
    updateUserVertexChatRoom: { // args
      id?: string | null; // String
    }
    updateVertexChatRoom: { // args
      id?: string | null; // String
      title?: string | null; // String
    }
    updateVertexChatRoomExample: { // args
      id?: string | null; // String
    }
    updateVertexChatRoomMessage: { // args
      id?: string | null; // String
    }
  }
  Query: {
    chatRoomConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    chatRoomMessageConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      chatRoomId?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    getChatRoom: { // args
      id?: string | null; // String
    }
    getChatRoomMessages: { // args
      chatRoomId?: string | null; // String
    }
    getUser: { // args
      id?: string | null; // String
    }
    getUserChatRoom: { // args
      id?: string | null; // String
    }
    getUserVertexChatRoom: { // args
      id: string; // String!
    }
    getVertexChatRoom: { // args
      id?: string | null; // String
    }
    getVertexChatRoomExamples: { // args
      vertexChatRoomId?: string | null; // String
    }
    getVertexChatRoomMessage: { // args
      vertexChatRoomId?: string | null; // String
    }
    node: { // args
      id: string; // ID!
    }
    nodes: { // args
      ids: string[]; // [ID!]!
    }
    postTweet: { // args
      id?: string | null; // String
      text?: string | null; // String
    }
    userChatRoomConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    userConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    userVertexChatRoomConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    vertexChatRoomConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    vertexChatRoomExampleConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    vertexChatRoomMessageConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Node";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
    
    /**
     * The complexity for an individual field. Return a number
     * or a function that returns a number to specify the
     * complexity for this field.
     */
    complexity?: QueryComplexity<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}